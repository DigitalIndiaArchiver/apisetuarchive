openapi: 3.0.2
info:
  title: Authorized Partner API Specification
  description: >-
    To access files in user’s DigiLocker account from your application, you must
    first obtain user’s authorization.
  termsOfService: 'https://ndh.digitallocker.gov.in/terms.php'
  contact:
    email: support@digitallocker.gov.in
  version: 1.0.0
servers:
  - url: 'https://betaapi.digitallocker.gov.in/public'
tags:
  - name: Authorization
    description: Authorization APIs For Server Side Web Applications.
  - name: Authorization API
    description: Authorization APIs For Limited Input Devices.
  - name: Token Revocation API
    description: To revoke a previously obtained Token.
  - name: Account Detail API
    description: Get User Details
  - name: File APIs
    description: >-
      File APIs allow your application to get the meta-data about issued and
      uploaded documents in user’s DigiLocker.
  - name: DigiLocker Sign up APIs
    description: This API can be used to sign up a user for DigiLocker.
  - name: DigiLocker Meta APIs
    description: >-
      DigiLocker Meta APIs provide information about a user account, issuers,
      document types and parameters required to pull a document.
paths:
  /oauth2/1/authorize:
    get:
      tags:
        - Authorization
      summary: Get Authorization Code
      description: >-
        Call to this API starts authorization flow using OAuth 2.0 protocol.
        This isn't an API call—it's a DigiLocker web page that lets the user
        sign in to DigiLocker and authorize your application to access user’s
        data. After the user decides whether or not to authorize your app, they
        will be redirected to the redirect link provided by your application.
      operationId: Get Authorization Code id
      parameters:
        - name: client_id
          in: query
          description: >-
            Provide the client id that was created during the application
            registration process on Partners Portal.
          schema:
            type: string
        - name: response_type
          description: 'Provide the grant type requested, either token or code.'
          in: query
          required: true
          schema:
            type: string
        - name: redirect_uri
          description: The URI to redirect the user after authorization has completed.
          in: query
          required: true
          schema:
            type: string
        - name: state
          description: >-
            This is your application specific data that will be passed back to
            your application through redirect_uri.
          in: query
          required: true
          schema:
            type: string
        - name: Code_challenge
          description: |
            A unique random string called code verifier (code_verifier) is
            created by the client application for every authorization request.
            The code_challenge sent as this parameter is the Base64URL (with no
            padding) encoded SHA256 hash of the code verifier.
                    Code block:

                   ```
                   string base64_url_encode_without_padding(string arg)
                   { 
                      string s = base64encode(arg); //Regular base64encoder with padding
                      s = s.replace(’=’,’’); //Remove any trailing ’=’
                      s = s.replace(’+’, ’-’); //Replace ’+’ with ’-’
                      s = s.replace(’/’, ’_’); //Replace ’/’ with ’_’ return s;
                    }
                    ```
          in: query
          required: false
          schema:
            type: string
            example: base64_url_encode_without_padding(sha256(code_verifier))
            properties:
              parameter:
                type: string
                enum:
                  - Base64URL
                  - SHA256
        - name: Code_challenge_method
          description: >-
            Specifies what method was used to encode a code_verifier to generate
            code_challenge parameter above. This parameter must be used with the
            code_challenge parameter. The only supported values for this
            parameter is S256.
          in: query
          required: false
          schema:
            type: string
            properties:
              parameter:
                type: string
                enum:
                  - S256
        - name: dl_flow
          description: >-
            If this parameter is provided its value will always be signup. This
            parameter indicates that the user does not have a DigiLocker account
            and will be directed to the signup flow directly. After the account
            is created, the user will be directed to the authorization flow. If
            this parameter is not sent, the user will be redirected to the sign
            in flow.
          in: query
          required: false
          schema:
            type: string
        - name: Verified_mobile
          description: >-
            Verified mobile number of the user. If this parameter is passed,
            DigiLocker will skip the mobile OTP verification step during sign
            up. DigiLocker will treat the mobile number passed in this parameter
            as a verified mobile number by the trusted client application. This
            parameter will be used only if dl_flow parameter mentioned above is
            set to signup and will be ignored otherwise.
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                title: Sample
                properties:
                  details:
                    type: object
                    required:
                      - access_token
                      - expires_in
                      - token_type
                      - scope
                    properties:
                      access_token:
                        type: string
                      expires_in:
                        type: integer
                      token_type:
                        type: string
                      scope:
                        type: string
        '400':
          description: Invalid status value
      security:
        - oauthAuthorizeCode: []
  /oauth2/1/token:
    post:
      tags:
        - Authorization
      summary: Get Access Token
      description: >-
        This endpoint only applies to apps using the authorization code flow. An
        app calls this endpoint to acquire a bearer token once the user has
        authorized the app. Calls to /oauth2/1/token need to be authenticated
        using the app's key and secret. These can either be passed as
        application/x-www-form-urlencoded POST parameters (see parameters below)
        or via HTTP basic authentication. If basic authentication is used, the
        app key should be provided as the username, and the app secret should be
        provided as the password.
      operationId: getaccesstoken id
      requestBody:
        description: Details of documents being created.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Get access token using authorization code:
                  $ref: '#/components/schemas/AccessToken'
                Get access token using refresh token:
                  $ref: '#/components/schemas/RefreshToken'
                Get access token using device code and OTP:
                  $ref: '#/components/schemas/DeviceAccessToken'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessResponse'
        '400':
          description: Bad request
        '401':
          description: >-
            If the access token is expired or has been revoked by DigiLocker
            user.
  /oauth2/1/code:
    post:
      tags:
        - Authorization API
      summary: Get Device Code
      description: >-
        The client device calls the DigiLocker API to get the device code by
        providing the client_id issued to the device OEM and either the username
        or the mobile number of the user. DigiLocker responds with a device code
        and then sends an OTP on the mobile number and email address associated
        with the user’s account. The masked mobile number and email address is
        also sent in response. The device should use these values to notify the
        users about the mobile and email address on which the OTP has been sent.
      operationId: Get Device Code id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAuthorizationCode'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthorizationCodeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ResponseOne'
                  - $ref: '#/components/schemas/ResponseTwo'
                  - $ref: '#/components/schemas/ResponseThree'
                  - $ref: '#/components/schemas/ResponseFour'
        '401':
          description: The client_id parameter is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_client_id
                  error_description:
                    type: string
                    example: The client_id parameter is invalid
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ResponseFive'
                  - $ref: '#/components/schemas/ResponseSix'
      security:
        - oauthsecurity: []
  /oauth2/1/revoke:
    post:
      tags:
        - Token Revocation API
      summary: Revoke Token.
      description: >-
        Client applications can revoke a previously obtained refresh or access
        token when it is no longer needed. This is done by making a request to
        the token revocation endpoint. DigiLocker will invalidate the specified
        token and, if applicable, other tokens based on the same authorisation
        grant. This API may be used to sign out a user from DigiLocker. This API
        will work for server based web applications, mobile application and
        limited input devices.
      operationId: get token revocation id
      requestBody:
        content:
          application/json:
            schema:
              required:
                - token
              type: object
              properties:
                token:
                  type: string
                  description: The token that needs to be revoked.
                token_type_hint:
                  type: string
                  enum:
                    - refresh_token
                    - access_token
                  description: >-
                    The type of the above token. The value will be one of
                    access_token or refresh_token. If this parameter is not
                    sent, DigiLocker will look for this token in both access and
                    refresh tokens and then revoke it.
      responses:
        '200':
          description: successful operation
        '400':
          description: The token is invalid
      security:
        - oauthsecurity: []
  /oauth2/1/user:
    get:
      tags:
        - Account Detail API
      summary: Get User Details
      description: >-
        Client applications can call this API to get the DigiLocker Id, name,
        date of birth and gender of the account holder. An access token is
        required to call this API. The API will return the user details of the
        account with which the access token is linked. It is strongly
        recommended that the API can be called by client application only once
        after acquiring the access token. Since the user details do not change,
        the client application may store the values and use them when necessary
        than calling this API repeatedly.
      operationId: Account Detail API id
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                title: Sample
                properties:
                  details:
                    type: object
                    required:
                      - digilockerid
                      - name
                      - dob
                      - gender
                      - eaadhaar
                    properties:
                      digilockerid:
                        type: string
                        example: 123e4567-e89b-12d3-a456-426655440000
                        description: >-
                          A unique 36 character DigiLocker Id of the user
                          account.
                      name:
                        type: string
                        example: Sunil Kumar
                        description: The name of the user as registered with DigiLocker.
                      eaadhar:
                        type: string
                        enum:
                          - 'Y'
                          - 'N'
                        description: >-
                          This indicates whether eAadhaar data is available for
                          this account. Possible values are Y and N.
                      dob:
                        type: string
                        format: dd-mm-yyy
                        example: '31121970'
                        description: >-
                          This is date of birth of the user as registered with
                          DigiLocker in DDMMYYYY format.
                      gender:
                        type: string
                        enum:
                          - M
                          - F
                          - T
                        description: >-
                          This is gender of the user as registered with
                          DigiLocker. The possible values are M, F, T for male,
                          female and transgender respectively.
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_token
                  error_description:
                    type: string
                    example: The access token is invalid
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unexpected_error
                  error_description:
                    type: string
                    example: Internal server error
      security:
        - bearerAuth: []
  /oauth2/1/files/:
    get:
      tags:
        - File APIs
      summary: Get List of Self Uploaded Documents
      description: >-
        Returns the list of meta-data about documents or folders in user’s
        DigiLocker in a specific location.
      operationId: Get List of Self Uploaded Documents
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                title: Sample
                properties:
                  directory:
                    type: string
                    minLength: 1
                  items:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - name
                        - type
                        - size
                        - date
                        - parent
                        - mime
                        - uri
                        - description
                        - issuer
                      properties:
                        id:
                          type: string
                          minLength: 1
                          example: 189079894
                        name:
                          type: string
                          minLength: 1
                        type:
                          type: string
                          minLength: 1
                        size:
                          type: string
                          minLength: 1
                        date:
                          type: string
                          minLength: 1
                        parent:
                          type: string
                          minLength: 1
                        mime:
                          type: string
                        uri:
                          type: string
                        description:
                          type: string
                        issuer:
                          type: string
                required:
                  - directory
                  - items
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_token
                  error_description:
                    type: string
                    example: The access token is invalid
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_id
                  error_description:
                    type: string
                    example: The folder does not exist
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unexpected_error
                  error_description:
                    type: string
                    example: Internal server error
      security:
        - bearerAuth: []
  '/oauth2/1/files/{id}':
    get:
      tags:
        - File APIs
      summary: Get List of Self Uploaded Documents
      description: >-
        Returns the list of meta-data about documents or folders in user’s
        DigiLocker in a specific location.
      operationId: Get List of Self Uploaded Documents id
      parameters:
        - name: id
          in: path
          description: >-
            The id of the folder to list. To list the files of root folder of a
            user’s locker, do not send this parameter. This is sent as a part of
            the URL.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                title: Sample
                properties:
                  details:
                    type: object
                    required:
                      - type
                      - name
                      - id
                      - size
                      - date
                      - parent
                      - mime
                      - uri
                      - description
                      - issuer
                    properties:
                      name:
                        type: string
                        example: My Documents
                        description: The name of the file or folder.
                      type:
                        type: string
                        example: dir
                        description: String dir for folder and string file for file.
                      id:
                        type: integer
                        example: '5678'
                        description: The id if this item is a folder.
                      size:
                        type: string
                        example: '366481'
                        description: Size of file or folder.
                      date:
                        type: string
                        example: '2015-05-12T15:50:38Z'
                        description: >-
                          This contains the date of file upload in case of self
                          uploaded documents
                      parent:
                        type: string
                        example: '1234'
                        description: The id of the parent folder.
                      mime:
                        type: string
                        example: ''
                        description: >-
                          The mime type of the file. This field will contain
                          “application/PDF” for PDF files; “image/png” for PNG
                          files and “image/jpg” or “image/jpeg” for JPG/JPEG
                          files. This will be blank in case of folder.
                      uri:
                        type: string
                        example: ''
                        description: >-
                          This is the unique identifier of the document shared
                          by the user in DigiLocker. You will use this
                          identifier to get the actual file from DigiLocker
                          using the API. URI will be blank in case of folder.
                      description:
                        type: string
                        example: ''
                        description: >-
                          This is the descriptive document type stored in
                          DigiLocker such as ‘Income Certificate’ or ‘Driving
                          License’.
                      issuer:
                        type: string
                        example: ''
                        description: >-
                          The name of the issuer. This is blank in case of
                          uploaded documents and folders.
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_token
                  error_description:
                    type: string
                    example: The access token is invalid
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_id
                  error_description:
                    type: string
                    example: The folder does not exist
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unexpected_error
                  error_description:
                    type: string
                    example: Internal server error
      security:
        - bearerAuth: []
  /oauth2/2/files/issued:
    get:
      tags:
        - File APIs
      summary: Issued Documents
      description: >-
        Returns the list of meta-data about issued documents in user’s
        DigiLocker.
      operationId: Get List of issued Documents id
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - name
                        - type
                        - size
                        - date
                        - parent
                        - uri
                        - doctype
                        - description
                        - issuerid
                        - issuer
                      properties:
                        name:
                          type: string
                          minLength: 1
                        type:
                          type: string
                          minLength: 1
                        size:
                          type: string
                        date:
                          type: string
                          minLength: 1
                        parent:
                          type: string
                        mime:
                          type: array
                          items:
                            properties: {}
                        uri:
                          type: string
                          minLength: 1
                        doctype:
                          type: string
                          minLength: 1
                        description:
                          type: string
                          minLength: 1
                        issuerid:
                          type: string
                          minLength: 1
                        issuer:
                          type: string
                          minLength: 1
                  resource:
                    type: string
                    minLength: 1
                required:
                  - items
                  - resource
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_token
                  error_description:
                    type: string
                    example: The access token is invalid
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ResponseSix'
                  - $ref: '#/components/schemas/ResponseSeven'
  /oauth2/1/files/issued:
    get:
      tags:
        - File APIs
      summary: Issued Documents
      description: >-
        Returns the list of meta-data about issued documents in user’s
        DigiLocker.
      operationId: Get List of issued Documents Version1 id
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                title: Sample
                properties:
                  details:
                    type: object
                    required:
                      - type
                      - name
                      - size
                      - date
                      - parent
                      - mime
                      - uri
                      - doctype
                      - description
                      - issuer
                      - issuerid
                    properties:
                      name:
                        type: string
                        example: Class XII Marksheet
                        description: The name of the certificate.
                      type:
                        type: string
                        example: file
                        description: String file.
                      size:
                        type: string
                        example: ' '
                        description: This will be blank.
                      date:
                        type: string
                        example: '2015-05-12T15:50:38Z'
                        description: >-
                          This contains the date on which the certificate was
                          last modified in DigiLocker.
                      parent:
                        type: string
                        example: ' '
                        description: This will be blank.
                      mime:
                        type: string
                        example: application/pdf
                        description: >-
                          The list of mime types for the certificate data. This
                          field will contain “application/PDF” or
                          “application/xml”.
                      uri:
                        type: string
                        example: in.gov.cbse-HSCER-201412345678
                        description: >-
                          This is the unique identifier of the document shared
                          by the user in DigiLocker. You will use this
                          identifier to get the actual file from DigiLocker
                          using the API.
                      doctype:
                        type: string
                        example: HSCER
                        description: >-
                          A 5 character unique document type provided by
                          DigiLocker.
                      description:
                        type: string
                        example: Class XII Marksheet
                        description: >-
                          This is the descriptive document type stored in
                          DigiLocker such as ‘Income Certificate’ or ‘Driving
                          License’.
                      issuer:
                        type: string
                        example: CBSE
                        description: The name of the issuer.
                      issuerid:
                        type: string
                        example: in.gov.cbse
                        description: Unique DigiLocker issuer id as mentioned in the URI.
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_token
                  error_description:
                    type: string
                    example: The access token is invalid
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ResponseSix'
                  - $ref: '#/components/schemas/ResponseSeven'
      security:
        - bearerAuth: []      
  '/oauth2/1/file/{uri}':
    get:
      tags:
        - File APIs
      summary: Get File from URI
      description: >-
        Returns a file from URI. This API can be used to fetch both issued
        document and uploaded document.
      operationId: Get File from URI id
      parameters:
        - name: uri
          in: path
          description: This is the unique identifier of the document.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/pdf:
              schema:
                type: string
                example: pdf binary content
            image/jpg:
              schema:
                type: string
                example: jpg binary content
            image/jpeg:
              schema:
                type: string
                example: jpeg binary content
            image/png:
              schema:
                type: string
                example: png binary content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: uri_missing
                  error_description:
                    type: string
                    example: URI parameter missing
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_token
                  error_description:
                    type: string
                    example: The access token is invalid
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_uri
                  error_description:
                    type: string
                    example: No file found for given URI
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Response3'
                  - $ref: '#/components/schemas/Response4'
                  - $ref: '#/components/schemas/Response5'
                  - $ref: '#/components/schemas/Response6'      
        '503':
          description: Gateway timeout
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Response1'
                  - $ref: '#/components/schemas/Response2'
      security:
        - bearerAuth: []
  '/oauth2/1/xml/{uri}':
    get:
      tags:
        - File APIs
      summary: Get Certificate Data in XML Format from URI
      description: >-
        Returns the certificate data in machine readable XML format for a URI.
        This API can be used to only for issued documents. The XML data may not
        be available for all documents. If the XML data is available for a
        particular document, the mime parameter in Get List of Issued Documents
        API will contain application/xml. Please refer to Digital Locker XML
        Certificate Formats for more details of XML formats of various
        documents.
      operationId: Get Certificate Data in XML Format from URI id
      parameters:
        - name: uri
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/XMLFormatSchema'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: uri_missing
                  error_description:
                    type: string
                    example: URI parameter missing
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_token
                  error_description:
                    type: string
                    example: The access token is invalid
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_uri
                  error_description:
                    type: string
                    example: No file found for given URI
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Response3'
                  - $ref: '#/components/schemas/Response4'
                  - $ref: '#/components/schemas/Response5'
                  - $ref: '#/components/schemas/Response6'
        '503':
          description: Gateway timeout
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Response1'
                  - $ref: '#/components/schemas/Response2'
      security:
        - bearerAuth: []
  /oauth2/2/xml/eaadhaar:
    get:
      tags:
        - File APIs
      summary: Get e-Aadhaar Data in XML Format
      description: Returns e-Aadhaar data in XML format for the account.
      operationId: Get e-Aadhaar Data in XML Format id
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/EaadharXamlSchema'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid token
                  error_description:
                    type: string
                    example: The access token is invalid
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    enum:
                      - aadhaar_not_linked
                      - aadhaar_not_available
                  error_description:
                    enum:
                      - Aadhaar is not linked to the account
                      - >-
                        Aadhaar data is not available for this user. Please
                        perform Aadhaar eKYC again.
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Response3'
                  - $ref: '#/components/schemas/Response4'
                  - $ref: '#/components/schemas/Response5'
                  - $ref: '#/components/schemas/Response6'
        '503':
          description: Gateway timeout
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Response1'
                  - $ref: '#/components/schemas/Response2'
      security:
        - bearerAuth: []
  /oauth2/1/file/upload:
    post:
      tags:
        - File APIs
      summary: Upload file to locker
      description: >-
        This API can be used to save/upload a file to uploaded documents in
        DigiLocker. The allowed file types are JPG, JPEG, PNG and PDF. The file
        size must not exceed 10MB.
      operationId: Upload File to Locker id
      parameters:
        - name: path
          description: The destination path of the file in DigiLocker including filename.
          in: header
          required: false
          schema:
            type: string
        - name: hmac
          description: >-
            This is used to verify the integrity of the file data. The client
            app calculates the hash message authentication code (HMAC) of the
            file content using SHA256 hashing algorithm and the client secret as
            the hashing key. The resulting HMAC is converted to Base64 format
            and sent in this parameter. Upon upload of file, DigiLocker
            calculates the HMAC of the file data and compares it with this
            HMAC..
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/FileUpload'
          image/png:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
          image/jpg:
            schema:
              type: string
              format: binary
          image/pdf:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    enum:
                      - path_missing
                      - contenttype_missing
                      - hmac_missing
                      - filename_missing
                      - hmac_mismatch
                      - invalid_filename
                      - invalid_filesize
                      - invalid_filetype
                      - invalid_path
                      - file_data_missing
                      - mimetype_mismatch
                  error_description:
                    enum:
                      - Path parameter is missing
                      - Content-Type parameter is missing
                      - HMAC parameter is missing
                      - Filename is missing in path parameter
                      - HMAC does not match
                      - Restricted characters are not allowed in file name
                      - The file size exceeds maximum allowed file size of 10MB
                      - The file type is not allowed
                      - The destination folder does not exist
                      - Missing file content in the request
                      - >-
                        The mimetype provided in Content-Type parameter does not
                        match with the mimetype of the file
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_token
                  error_description:
                    type: string
                    example: The access token is invalid
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: unexpected_error
                  error_description:
                    type: string
                    description: Internal server error
      security:
        - bearerAuth: []
  /oauth2/1/pull/pulldocument:
    post:
      tags:
        - File APIs
      summary: Pull Document
      description: >-
        This API allows a client application to search a document/certificate
        from issuer’s repository using the parameters provided by a user. The
        searched document is saved in user’s issued document section of
        DigiLocker if the search is successful.
      operationId: Pull Document id
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PullDocumentSchema'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                title: Sample
                properties:
                  details:
                    type: object
                    required:
                      - uri
                    properties:
                      uri:
                        type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Response13'
                  - $ref: '#/components/schemas/ResponseSix'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_token
                  error_description:
                    type: string
                    example: The access token is invalid
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: record_not_found
                  error_description:
                    description:
                        No record found in issuer database for given criteria.
                        Please check the details and try again. If problem
                        persists, see the FAQ section for possible causes.
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Response14'
                  - $ref: '#/components/schemas/Response15'
                  - $ref: '#/components/schemas/Response16'
                  - $ref: '#/components/schemas/Response17'
                  - $ref: '#/components/schemas/Response18'
      security:
        - bearerAuth: []
  /signup/2/demoauth:
    post:
      tags:
        - DigiLocker Sign up APIs
      summary: SIGN UP
      description: >-
        This API is used to validate Aadhaar details and verify the mobile
        number by generating an OTP. This API call, if successful, will be
        followed by verify OTP call by the partner application if the user is
        online or available to perform OTP validation as indicated in
        verification parameter
      operationId: SIGN UP id
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DemoAuth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoAuthResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                 oneOf:
                  - $ref: '#/components/schemas/Response10'
                  - $ref: '#/components/schemas/Response11'
                  - $ref: '#/components/schemas/Response12'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_client_id
                  error_description:
                    type: string
                    example: The client_id parameter is invalid
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: unexpected_error
                  error_description:
                    description: Internal server error
      security:
        - oauthsecurity: []
  /signup/1/demoauthverify:
    post:
      tags:
        - DigiLocker Sign up APIs
      summary: Verify OTP
      description: >-
        This API is used to verify the OTP sent by DigiLocker during the sign up
        API call above.
      operationId: Verify OTP id
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DemoAuthVerify'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoAuthVerifyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Response7'
                  - $ref: '#/components/schemas/Response8'
                  - $ref: '#/components/schemas/Response9'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_client_id
                  error_description:
                    type: string
                    example: The client_id parameter is invalid
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: unexpected_error
                  error_description:
                    description: Internal server error
      security:
        - oauthsecurity: []
  /oauth2/1/pull/issuers:
    post:
      tags:
        - DigiLocker Meta APIs
      summary: Get List of Issuers
      description: Returns the list of issuers registered with DigiLocker.
      operationId: Get List of Issuers id
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Issuer'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuerResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_parameter
                  error_description:
                    type: string
                    example: One or more of the mandatory parameters is missing or
                      invalid. The error description text will contain one or
                      more of the following error texts:|-
                       Timestamp parameter
                      is missing or invalid  HMAC parameter is missing or
                      invalid
                      
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_client_id
                  error_description:
                    type: string
                    example: The client_id parameter is invalid
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: unexpected_error
                  error_description:
                    description: Internal server error
      security:
        - oauthsecurity: []
  /oauth2/1/pull/doctype:
    post:
      tags:
        - DigiLocker Meta APIs
      summary: Get List of Documents Provided by an Issuer
      description: >-
        Returns a list of documents/certificates issued by an issuer
        organization registered with DigiLocker.
      operationId: Get List of Documents Provided by an Issuer id
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocType'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocTypeResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: invalid_parameter
                  error_description:
                    description: One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-
                           The orgid parameter is missing or invalid 
                          Timestamp parameter is missing or invalid  HMAC
                          parameter is missing or invalid
                      
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_client_id
                  error_description:
                    type: string
                    example: The client_id parameter is invalid
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: unexpected_error
                  error_description:
                    description: Internal server error
      security:
        - oauthsecurity: []
  /oauth2/1/pull/parameters:
    post:
      tags:
        - DigiLocker Meta APIs
      summary: Get Search Parameters for a Document
      description: >-
        Returns a list of parameters required to search a document/certificate
        of an issuer organization registered with DigiLocker. These parameters
        are used to pull a document from issuer’s repository using Pull Document
        API mentioned in subsequent section.
      operationId: Get Search Parameters for a Document id
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SearchParameters'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchParametersResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: invalid_parameter
                  error_description:
                    description:  One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-
                           The orgid parameter is missing or invalid  The
                          doctype parameter is missing or invalid  Timestamp
                          parameter is missing or invalid  HMAC parameter is
                          missing or invalid
                      
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_client_id
                  error_description:
                    type: string
                    example: The client_id parameter is invalid
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: unexpected_error
                  error_description:
                    description: Internal server error
      security:
        - oauthsecurity: []
  /account/2/verify:
    post:
      tags:
        - DigiLocker Meta APIs
      summary: Verify Account
      description: >-
        This API can be used to verify whether a mobile number or Aadhaar number
        is already registered with DigiLocker.
      operationId: Verify Account id
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyAccount'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAccountResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: invalid_parameter
                  error_description:
                    description: One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-
                           Either one of uid or mobile number is mandatory 
                          Timestamp parameter is missing or invalid  HMAC
                          parameter is missing or invalid
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: invalid_client_id
                  error_description:
                    type: string
                    description: The client_id parameter is invalid
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: unexpected_error
                  error_description:
                    description: Internal server error
      security:
        - oauthsecurity: []
  /account/1/pushuri:
    post:
      tags:
        - DigiLocker Meta APIs
      summary: Push URI to Account
      description: >-
        The API can use to push or delete a single URI into Digital Locker using
        DigiLocker Id acquired using Get User Details API. This API can be used
        to push the certificate details to Digital Locker as and when a
        certificate is generated in the issuer system. The issuing departments
        must register on DigiLocker as a registered Issuer and implement the
        requisite Issuer APIs as mentioned in Digital Locker Issuer API
        Specification document prior to pushing certificates using this API.
      operationId: Push URI to Account id
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PushUri'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                title: Sample
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: invalid_parameter
                  error_description:
                    type: string
                    description: One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-
                           URI parameter is missing or invalid
                           Doctype parameter is missing or invalid 
                           Description parameter is missing or invalid
                           Docid parameter is missing or invalid  Issuedate parameter is missing orinvalid  Timestamp parameter is missing or invalid 
                          HMAC parameter is missing or invalid   URI already
                          exists in this account   URI already exists in
                          another account
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: invalid_client_id
                  error_description:
                    type: string
                    description: The client_id parameter is invalid
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: invalid_digilocker_id
                  error_description:
                    type: string
                    description: The digilockerid parameter is invalid
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: unexpected_error
                  error_description:
                    type: string
                    description: Internal server error
      security:
        - oauthsecurity: []
  /statistics/1/counts:
    post:
      tags:
        - DigiLocker Meta APIs
      summary: Get Statistics
      description: >-
        Returns DigiLocker statistics such as the count of users, authentic
        documents, issuers and requesters as on a specific date.
      operationId: Get Statistics id
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GetStatistics'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStatisticsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: invalid_parameter
                  error_description:
                    type: string
                    description: One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-
                           Timestamp parameter is missing or invalid 
                           HMAC parameter is missing or invalid
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: invalid_client_id
                  error_description:
                    type: string
                    description: The client_id parameter is invalid
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: unexpected_error
                  error_description:
                    type: string
                    description: Internal server error
      security:
        - oauthsecurity: []
components:
  schemas:
    AccessToken:
      required:
        - grant_type
        - client_id
        - client_secret
      type: object
      properties:
        grant_type:
          type: string
          enum:
            - authorization_code
        code:
          type: string
          example: ca82123a5476aa2f5e4638957c0ecc55c6ec07c1
        redirect_uri:
          type: string
          example: 'https://ndh.digitallocker.gov.in/oauth2-redirect.html'
        code_verifier:
          type: string
          example: a123456abca
        client_id:
          type: string
          example: ABCDEFG
        client_secret:
          type: string
          example: a123456abcdeghijk7890
    AccessResponse:
      required:
        - access_token
        - expires_in
        - token_type
        - scope
        - refresh_token
        - digilocker_id
        - name
        - dob
        - gender
        - eaadhar
        - reference_key
      type: object
      properties:
        access_token:
          type: string
          example: bc125c212a4b03a9a188a858be5a163f379e878a
          description: The access token that can be used to call the DigiLocker APIs.
        expires_in:
          type: integer
          format: int64
          example: 3600
          description: The duration in seconds for which the access token is valid
        token_type:
          type: string
          example: Bearer
          description: The type of token which will always be Bearer.
        scope:
          type: string
          description: Scope of the token.
        refresh_token:
          type: string
          example: a47ab18c593703e4f83a274694db7422a8cfcb8f
          description: >-
            The refresh token used to refresh the above access token when it
            expires. Please refer to Refresh Access Token API for more details.
        digilocker_id:
          type: string
          example: 123e4567-e89b-12d3-a456-426655440000
          description: A unique 36 character DigiLocker Id of the user account.
        name:
          type: string
          example: Sunil Kumar
          description: The name of the user as registered with DigiLocker.
        eaadhar:
          type: string
          enum:
            - 'Y'
            - 'N'
          description: >-
            This indicates whether eAadhaar data is available for this account.
            Possible values are Y and N.
        dob:
          type: integer
          format: dd-mm-yyy
          example: '31121970'
          description: >-
            This is date of birth of the user as registered with DigiLocker in
            DDMMYYYY format.
        gender:
          type: string
          enum:
            - M
            - F
            - T
          description: >-
            This is gender of the user as registered with DigiLocker. The
            possible values are M, F, T for male, female and transgender
            respectively.
        reference_key:
          type: string
          example: 1c66bec26364cd6fefaabc6cae91840a
          description: A unique reference of the user account.
    RefreshToken:
      required:
        - grant_type
        - refresh_token
        - client_id
        - client_secret
      type: object
      properties:
        grant_type:
          type: string
          enum:
            - refresh_token
        refresh_token:
          type: string
          example: ca82123a5476aa2f5e4638957c0ecc55c6ec07c1
        client_id:
          type: string
          example: ABCDEFG
        client_secret:
          type: string
          example: a123456abcdeghijk7890
    RefreshAccessToken:
      required:
        - grant_type
        - refresh_Token
      type: object
      properties:
        grant_type:
          type: string
          example: refresh_token
        refresh_Token:
          type: string
          example: a47ab18c593703e4f83a274694db7422a8cfcb8f
    DeviceAuthorizationCode:
      properties:
        client_id:
          type: string
        response_type:
          type: string
          description: The parameter must be set to device_code.
          example: device_code
        dl_mobile:
          type: integer
          description: |-
            Mobile number associated with DigiLocker account of the
              user. The client device accepts the mobile number on the device from user and sends it in this parameter. Either the username or the mobile number must be provided.
        dl_username:
          description: >-
            DigiLocker username of the user. The client device accepts the
            username on the device from user and sends the username in this
            parameter. Either the username or the mobile number must be
            provided.   
          type: string
    DeviceAuthorizationCodeResponse:
      required:
        - device_code
        - dl_masked_mobile
        - dl_masked_email
        - expires_in
      type: object
      properties:
        device_code:
          type: string
          example: 74tq5miHKB
          description: The device verification code.
        dl_masked_mobile:
          type: integer
          example: XXXXXX1234
          description: The masked mobile number on which the OTP is sent.
        dl_masked_email:
          type: string
          example: xxxxxx@gmail.com
          description: The masked email on which the OTP is sent.
        expires_in:
          type: integer
          example: 600
          description: The duration in seconds for which the code is valid.
    DeviceAccessToken:
      properties:
        client_id:
          type: string
          description: >-
            Provide the client id that was created during the application
            registration process on Partners Portal.
        grant_type:
          description: >-
            The grant type, which must be
            “urn:ietf:params:oauth:grant-type:device_code”.
          type: string
          example: 'urn:ietf:params:oauth:grant-type:device_code'
        device_code:
          description: >-
            The device verification code. The device_code field from Get Device
            Code Response.
          type: string
        dl_otp:
          description: The OTP collected from the user
          type: string
    AuthTokenResponse:
      required:
        - access_token
        - expires_in
        - token_type
        - scope
        - refresh_token
      type: object
      properties:
        access_token:
          type: string
          example: bc125c212a4b03a9a188a858be5a163f379e878a
          description: |-
            The access token that can be used to call the
                DigiLocker APIs.
        expires_in:
          type: integer
          format: int64
          example: 3600
          description: |-
            The duration in seconds for which the access token is
                        valid.
        token_type:
          type: string
          example: Bearer
          description: The type of token which will always be Bearer.
        scope:
          type: string
          description: Scope of the token.
        refresh_token:
          type: string
          example: ad6f4004cc3e53f56bda391fe485fc4d32928061
          description: |-
            The refresh token used to refresh the above access
              token when it expires. This will value will be
              returned only in case of web applications and not be
              returned for limited input devices.
    FileUpload:
      properties:
        Content-Type:
          type: string
          description: >-
            The mime type of the file e.g. image/jpg, image/jpeg, image/png,
            application/pdf.
    FileUploadResponse:
      properties:
        details:
          required:
            - Path
            - size
          type: object
          properties:
            Path:
              type: string
              description: >-
                The destination path of the file in DigiLocker including
                filename.
            size:
              type: string
              description: Size of file.
    DemoAuth:
      properties:
        clientid:
          type: string
          description: >-
            Provide the client id that was created during the application
            registration process on Partners Portal.
        hmac:
          type: string
          description: >-
            Provide SHA-256 encrypted value of the client secret, clientid and
            ts parameters above concatenated in this sequence (client secret,
            clientid, ts). The hmac parameter is used by DigiLocker to ensure
            the data integrity and authentication of the request. Use the Client
            Secret Key generated during the application registration process on
            Partners Portal as the client secret.
          format: binary
        ts:
          type: string
          description: >-
            Provide a timestamp value in UNIX (or POSIX) format in IST time zone
            in seconds. This timestamp value must not be older than 30 minutes.
        mobile:
          description: >-
            This is the mobile number of the user. DigiLocker will check whether
            an account exists for this mobile number. Either uid or mobile is
            required to verify whether an account exists.
          type: integer
        name:
          description: This is name of the user as mentioned in Aadhaar.
          type: string
        dob:
          description: >-
            This is date of birth of the user as mentioned in Aadhaar in
            DDMMYYYY format.
          type: integer
        gender:
          description: >-
            This is gender of the user as mentioned in Aadhaar. The possible
            values are M, F, T for male, female and transgender respectively.
          enum:
            - M
            - F
            - T
        verification:
          description: >-
            The parameter indicates whether the mobile number provided above
            should be validated by DigiLocker. If this parameter is ‘Y’, the
            DigiLocker sends an OTP to verify the mobile number. In this case
            the client application will call the second API to validate the OTP.
            The user will be signed on only after successful OTP validation.
            This flow should be used when the user account is created by user
            himself/herself or the user is present to provide the OTP. If this
            parameter is ‘N’, the user account will be created without OTP
            validation. The OTP validation will be performed when the user signs
            in for the first time in DigiLocker. This flow should be used when
            the user account needs to be created in the absence of the user.
          type: string
        consent:
          description: >-
            The consent indicator from the user for performing demographic
            authentication using Aadhaar details. This Partner Application must
            capture the user consent for performing the Aadhaar demographic
            authentication. The possible values are ‘Y’ and ‘N’. The sign up
            request will be processed only when this indicator is ‘Y’.
          type: string
        demoauth:
          description: >-
            The parameter indicates whether Aadhaar demographic authentication
            must be successful for creating DigiLocker account. The possible
            values are ‘Y’ and ‘N’. The value of ‘Y’ will perform Aadhaar
            demographic authentication and will return errors if any in
            response. The value of ‘N’ will also perform Aadhaar demographic
            authentication but will return any error in case of authentication
            failure. It will create a basic mobile based account for the user.
            Value ‘N’ should be used when the user account needs to be created
            in the absence of the user.
          type: string
        uid:
          description: >-
            This is the Aadhaar number of the user. DigiLocker will check
            whether an account exists for this Aadhaar number. Either uid or
            mobile is required to verify whether an account exists.
          type: integer
    DemoAuthResponse:
      properties:
        details:
          type: object
          required:
            - access_token
            - expires_in
            - token_type
            - scope
            - refresh_token
            - mobile
          properties:
            access_token:
              type: string
              example: bc125c212a4b03a9a188a858be5a163f379e878a
              description: The access token that can be used to call the DigiLocker APIs.
            expires_in:
              type: string
              example: 3600
              description: The duration in seconds for which the access token is valid.
            token_type:
              type: string
              example: Bearer
              description: The type of token which will always be Bearer.
            scope:
              type: string
              example: ''
              description: Scope of the token
            refresh_token:
              type: string
              example: a47ab18c593703e4f83a274694db7422a8cfcb8f
              description: >-
                The refresh token used to refresh the above access token when it
                expires. Please refer to Refresh Access Token API for more
                details.
            mobile:
              type: integer
              example: '******3712'
              description: >-
                The masked mobile number of the user on which the OTP has been
                sent.           
    DemoAuthVerify:
      properties:
        clientid:
          type: string
          description: >-
            Provide the client id that was created during the application
            registration process on Partners Portal.
        hmac:
          type: string
          description: >-
            Provide SHA-256 encrypted value of the client secret, clientid and
            ts parameters above concatenated in this sequence (client secret,
            clientid, ts). The hmac parameter is used by DigiLocker to ensure
            the data integrity and authentication of the request. Use the Client
            Secret Key generated during the application registration process on
            Partners Portal as the client secret.
          format: binary
        ts:
          type: string
          description: >-
            Provide a timestamp value in UNIX (or POSIX) format in IST time zone
            in seconds. This timestamp value must not be older than 30 minutes.
        mobile:
          description: >-
            This is the mobile number of the user. DigiLocker will check whether
            an account exists for this mobile number. Either uid or mobile is
            required to verify whether an account exists.
          type: integer
        otp:
          description: The OTP provided by the user.
          type: integer
    DemoAuthVerifyResponse:
      properties:
        details:
          type: object
          required:
            - access_token
            - expires_in
            - token_type
            - scope
            - refresh_token
          properties:
            access_token:
              type: string
              example: bc125c212a4b03a9a188a858be5a163f379e878a
              description: The access token that can be used to call the DigiLocker APIs.
            expires_in:
              type: string
              example: 3600
              description: The duration in seconds for which the access token is valid.
            token_type:
              type: string
              example: Bearer
              description: The type of token which will always be Bearer.
            scope:
              type: string
              example: ''
              description: Scope of the token
            refresh_token:
              type: string
              example: a47ab18c593703e4f83a274694db7422a8cfcb8f
              description: >-
                The refresh token used to refresh the above access token when it
                expires. Please refer to Refresh Access Token API for more
                details.
    IssuerResponse:
      type: object
      properties:
        issuers:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            required:
              - name
              - description
              - categories
              - issuerid
              - orgid
            properties:
              name:
                type: string
                minLength: 1
              description:
                type: string
              categories:
                type: string
                minLength: 1
              issuerid:
                type: string
                minLength: 1
              orgid:
                type: string
                minLength: 1
      required:
        - issuers
    Issuer:
      properties:
        clientid:
          type: string
          description: >-
            Provide the client id that was created during the application
            registration process on Partners Portal.
        hmac:
          type: string
          description: >-
            Provide SHA-256 encrypted value of the client secret, clientid and
            ts parameters above concatenated in this sequence (client secret,
            clientid, ts). The hmac parameter is used by DigiLocker to ensure
            the data integrity and authentication of the request. Use the Client
            Secret Key generated during the application registration process on
            Partners Portal as the client secret.
          format: binary
        ts:
          type: string
          description: >-
            Provide a timestamp value in UNIX (or POSIX) format in IST time zone
            in seconds. This timestamp value must not be older than 30 minutes.
    DocType:
      properties:
        clientid:
          type: string
          description: >-
            Provide the client id that was created during the application
            registration process on Partners Portal.
        hmac:
          type: string
          description: >-
            Provide SHA-256 encrypted value of the client secret, clientid and
            ts parameters above concatenated in this sequence (client secret,
            clientid, ts). The hmac parameter is used by DigiLocker to ensure
            the data integrity and authentication of the request. Use the Client
            Secret Key generated during the application registration process on
            Partners Portal as the client secret.
          format: binary
        ts:
          type: string
          description: >-
            Provide a timestamp value in UNIX (or POSIX) format in IST time zone
            in seconds. This timestamp value must not be older than 30 minutes.
        orgid:
          description: >-
            The organization id for the issuer in DigiLocker. This organization
            id is returned in Get List of Issuers API mentioned earlier.
          type: string
    DocTypeResponse:
      type: object
      properties:
        documents:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            required:
              - doctype
              - description
            properties:
              doctype:
                type: string
                minLength: 1
              description:
                type: string
                minLength: 1
      required:
        - documents
    SearchParameters:
      properties:
        clientid:
          type: string
          description: >-
            Provide the client id that was created during the application
            registration process on Partners Portal.
        hmac:
          type: string
          description: >-
            Provide SHA-256 encrypted value of the client secret, clientid and
            ts parameters above concatenated in this sequence (client secret,
            clientid, ts). The hmac parameter is used by DigiLocker to ensure
            the data integrity and authentication of the request. Use the Client
            Secret Key generated during the application registration process on
            Partners Portal as the client secret.
          format: binary
        ts:
          type: string
          description: >-
            Provide a timestamp value in UNIX (or POSIX) format in IST time zone
            in seconds. This timestamp value must not be older than 30 minutes.
        orgid:
          description: >-
            The organization id for the issuer in DigiLocker. This organization
            id is returned in Get List of Issuers API mentioned earlier.
          type: string
        doctype:
          description: A 5 character unique document type provided by DigiLocker.
          type: string
    SearchParametersResponse:
      type: array
      minItems: 1
      uniqueItems: true
      items:
        type: object
        required:
          - label
          - paramname
          - example
        properties:
          label:
            type: string
            minLength: 1
          paramname:
            type: string
            minLength: 1
          valuelist: {}
          example:
            type: string
            minLength: 1
    VerifyAccount:
      properties:
        clientid:
          type: string
          description: >-
            Provide the client id that was created during the application
            registration process on Partners Portal.
        hmac:
          type: string
          description: >-
            Provide SHA-256 encrypted value of the client secret, clientid and
            ts parameters above concatenated in this sequence (client secret,
            clientid, ts). The hmac parameter is used by DigiLocker to ensure
            the data integrity and authentication of the request. Use the Client
            Secret Key generated during the application registration process on
            Partners Portal as the client secret.
          format: binary
        ts:
          type: string
          description: >-
            Provide a timestamp value in UNIX (or POSIX) format in IST time zone
            in seconds. This timestamp value must not be older than 30 minutes.
        mobile:
          description: >-
            This is the mobile number of the user. DigiLocker will check whether
            an account exists for this mobile number. Either uid or mobile is
            required to verify whether an account exists.
          type: integer
        uid:
          description: >-
            This is the Aadhaar number of the user. DigiLocker will check
            whether an account exists for this Aadhaar number. Either uid or
            mobile is required to verify whether an account exists.
          type: integer
    VerifyAccountResponse:
      type: object
      required:
        - registered
        - digilockerid
      properties:
        registered:
          type: string
          example: 'true'
          description: >-
            true indicates that the provided Aadhaar/mobile number is already
            registered and false indicates otherwise.
        digilockerid:
          type: string
          example: 123e4567-e89b-12d3-a456-426655440000
          description: A unique 36 character DigiLocker Id of the user account.
    PushUri:
      properties:
        clientid:
          type: string
          description: >-
            Provide the client id that was created during the application
            registration process on Partners Portal.
        hmac:
          type: string
          description: >-
            Provide SHA-256 encrypted value of the client secret, clientid and
            ts parameters above concatenated in this sequence (client secret,
            clientid, ts). The hmac parameter is used by DigiLocker to ensure
            the data integrity and authentication of the request. Use the Client
            Secret Key generated during the application registration process on
            Partners Portal as the client secret.
          format: binary
        ts:
          type: string
          description: >-
            Provide a timestamp value in UNIX (or POSIX) format in IST time zone
            in seconds. This timestamp value must not be older than 30 minutes.
        docid:
          description: >-
            A unique number of the document. This id will be unique within the
            document type issued by the issuer.
          type: string
        uri:
          description: This is the unique identifier of the document.
          type: string
        digilockerid:
          description: >-
            This is the DigiLocker Id of the user that was acquired using Get
            User Details API.
          type: integer
        issuedate:
          description: The issue date of the document in DDMMYYYY format.
          type: string
        validfrom:
          description: >-
            The date from which the document is valid in DDMMYYYY format. This
            may be same as the issue date.
          type: integer
        validto:
          description: The expiry date of the document in DDMMYYYY format.
          type: string
        action:
          description: >-
            Action that needs to be taken for the Aadhaar number and URI
            combination. Possible values are A for adding a new URI, U for
            updating an already added URI details or D for deleting the URI.
          type: string
    GetStatistics:
      properties:
        clientid:
          type: string
          description: >-
            Provide the client id that was created during the application
            registration process on Partners Portal.
        hmac:
          type: string
          description: >-
            Provide SHA-256 encrypted value of the client secret, clientid and
            ts parameters above concatenated in this sequence (client secret,
            clientid, ts). The hmac parameter is used by DigiLocker to ensure
            the data integrity and authentication of the request. Use the Client
            Secret Key generated during the application registration process on
            Partners Portal as the client secret.
          format: binary
        ts:
          type: string
          description: >-
            Provide a timestamp value in UNIX (or POSIX) format in IST time zone
            in seconds. This timestamp value must not be older than 30 minutes.
    GetStatisticsResponse:
      type: object
      required:
        - users
        - authentic_documents
        - issuers
        - requestors
        - count_as_on
        - monthwise_registations
        - id
        - month
        - year
        - count
        - yearwise_authentic_documents
      properties:
        users:
          type: string
          example: '25873490'
          description: Count of registered users on DigiLocker.
        authentic_documents:
          type: string
          example: '3520475277'
          description: Count of authentic documents available through DigiLocker.
        issuers:
          type: string
          example: '134'
          description: Count of issuer organizations registered on DigiLocker.
        requestors:
          type: string
          example: '45'
          description: Count of requester organizations registered on DigiLocker.
        count_as_on:
          type: string
          example: '31072019'
          description: The date on which this statistics is generated.
        monthwise_registations:
          description: List of last 12 months cumulative user registrations
          type: object
          properties:
            id:
              type: integer
              example: '18496'
              description: Unique id of the list item.
            month:
              type: integer
              example: '5'
              description: Month of the year in numeric format with January as 1
            year:
              type: integer
              example: '2018'
              description: Year in YYYY format
            count:
              type: integer
              example: '124794'
              description: Count of cumulative user registrations in the given month.
            details2:
              type: object
              properties:
                id:
                  type: integer
                  example: '18496'
                  description: Unique id of the list item.
                month:
                  type: integer
                  example: '5'
                  description: Month of the year in numeric format with January as 1
                year:
                  type: integer
                  example: '2018'
                  description: Year in YYYY format
                count:
                  type: integer
                  example: '124794'
                  description: Count of cumulative user registrations in the given month.
        yearwise_authentic_documents:
          description: >-
            List of cumulative year-wise counts of authentic documents in
            DigiLocker.
          type: object
          properties:
            id:
              type: integer
              example: '18347'
              description: Unique id of the list item.
            year:
              type: integer
              example: '2016'
              description: Year in YYYY format.
            count:
              type: integer
              example: '10134567'
              description: |-
                Count of cumulative user authentic documents in
                  the given year.
            details:
              type: object
              properties:
                id:
                  type: integer
                  example: '18350'
                  description: Unique id of the list item.
                year:
                  type: integer
                  example: '2017'
                  description: Year in YYYY format.
                count:
                  type: integer
                  example: '1000548093'
                  description: >-
                    Count of cumulative user authentic documents in the given
                    year.
            details1:
              type: object
              properties:
                id:
                  type: integer
                  example: '18354'
                  description: Unique id of the list item.
                year:
                  type: integer
                  example: '2018'
                  description: Year in YYYY format.
                count:
                  type: integer
                  example: '2410543684'
                  description: >-
                    Count of cumulative user authentic documents in the given
                    year.
            details2:
              type: object
              properties:
                id:
                  type: integer
                  example: '18567'
                  description: Unique id of the list item.
                year:
                  type: integer
                  example: '2019'
                  description: Year in YYYY format.
                count:
                  type: integer
                  example: '3520475277'
                  description: >-
                    Count of cumulative user authentic documents in the given
                    year.  
    XMLFormatSchema:
      type: object
      properties:
        CertificateData:
          type: array
          items:
            properties: {}
        Signature:
          type: object
          properties:
            SignedInfo: {}
            SignatureValue: {}
            KeyInfo:
              type: object
              properties:
                X509Data: {}
          required:
            - KeyInfo
      required:
        - CertificateData
        - Signature
    EaadharXamlSchema:
      type: object
      properties:
        KycRes:
          type: object
          properties:
            Rar:
              type: string
              minLength: 1
            UidData:
              type: object
              properties:
                Poi:
                  type: object
                  properties:
                    dob:
                      type: string
                      minLength: 1
                    gender:
                      type: string
                      minLength: 1
                    name:
                      type: string
                      minLength: 1
                  required:
                    - dob
                    - gender
                    - name
                Poa:
                  type: object
                  properties:
                    co:
                      type: string
                      minLength: 1
                    country:
                      type: string
                      minLength: 1
                    dist:
                      type: string
                      minLength: 1
                    lm:
                      type: string
                      minLength: 1
                    loc:
                      type: string
                      minLength: 1
                    pc:
                      type: string
                      minLength: 1
                    state:
                      type: string
                      minLength: 1
                    vtc:
                      type: string
                      minLength: 1
                  required:
                    - co
                    - country
                    - dist
                    - lm
                    - loc
                    - pc
                    - state
                    - vtc
                LData:
                  type: object
                  properties:
                    co:
                      type: string
                      minLength: 1
                    country:
                      type: string
                      minLength: 1
                    dist:
                      type: string
                      minLength: 1
                    lang:
                      type: string
                      minLength: 1
                    lm:
                      type: string
                      minLength: 1
                    loc:
                      type: string
                      minLength: 1
                    name:
                      type: string
                      minLength: 1
                    pc:
                      type: string
                      minLength: 1
                    state:
                      type: string
                      minLength: 1
                    vtc:
                      type: string
                      minLength: 1
                  required:
                    - co
                    - country
                    - dist
                    - lang
                    - lm
                    - loc
                    - name
                    - pc
                    - state
                    - vtc
                Pht:
                  type: string
                  minLength: 1
                Prn:
                  type: object
                  properties:
                    type:
                      type: string
                      minLength: 1
                    text:
                      type: string
                      minLength: 1
                  required:
                    - type
                    - text
                tkn:
                  type: string
                  minLength: 1
                uid:
                  type: string
                  minLength: 1
              required:
                - Poi
                - Poa
                - LData
                - Pht
                - Prn
                - tkn
                - uid
            Signature:
              type: object
              properties:
                SignedInfo:
                  type: object
                  properties:
                    CanonicalizationMethod:
                      type: object
                      properties:
                        Algorithm:
                          type: string
                          minLength: 1
                      required:
                        - Algorithm
                    SignatureMethod:
                      type: object
                      properties:
                        Algorithm:
                          type: string
                          minLength: 1
                      required:
                        - Algorithm
                    Reference:
                      type: object
                      properties:
                        Transforms:
                          type: object
                          properties:
                            Transform:
                              type: object
                              properties:
                                Algorithm:
                                  type: string
                                  minLength: 1
                              required:
                                - Algorithm
                          required:
                            - Transform
                        DigestMethod:
                          type: object
                          properties:
                            Algorithm:
                              type: string
                              minLength: 1
                          required:
                            - Algorithm
                        DigestValue:
                          type: string
                          minLength: 1
                        URI:
                          type: string
                      required:
                        - Transforms
                        - DigestMethod
                        - DigestValue
                        - URI
                  required:
                    - CanonicalizationMethod
                    - SignatureMethod
                    - Reference
                SignatureValue:
                  type: string
                  minLength: 1
                KeyInfo:
                  type: object
                  properties:
                    X509Data:
                      type: object
                      properties:
                        X509SubjectName:
                          type: string
                          minLength: 1
                        X509Certificate:
                          type: string
                          minLength: 1
                      required:
                        - X509SubjectName
                        - X509Certificate
                  required:
                    - X509Data
                xmlns:
                  type: string
                  minLength: 1
              required:
                - SignedInfo
                - SignatureValue
                - KeyInfo
                - xmlns
            code:
              type: string
              minLength: 1
            ret:
              type: string
              minLength: 1
            ts:
              type: string
              minLength: 1
            ttl:
              type: string
              minLength: 1
            txn:
              type: string
              minLength: 1
          required:
            - Rar
            - UidData
            - Signature
            - code
            - ret
            - ts
            - ttl
            - txn
      required:
        - KycRes
    PullDocumentSchema:
      properties:
        orgid:
          description: >-
            The organization id for the issuer in DigiLocker. This organization
            id is returned in Get List of Issuers API mentioned above.
          type: string
        doctype:
          type: string
          description: A 5 character unique document type provided by DigiLocker.
        consent:
          description: >-
            The consent indicator from the user for performing demographic
            authentication using Aadhaar details. This Partner Application must
            capture the user consent for performing the Aadhaar demographic
            authentication. The possible values are ‘Y’ and ‘N’. The sign up
            request will be processed only when this indicator is ‘Y’.
          type: string
        reg_no:
          type: string
          description: >-
            Other parameters required for fetching a document as listed in
            paramname field of Get Search Parameters API.
        chasis_no:
          type: string
          description: >-
            Other parameters required for fetching a document as listed in
            paramname field of Get Search Parameters API.
    ResponseOne:
      type: object
      properties:
        error:
          type: string
          description: invalid_response_type
        error_description:
          type: string
          description: The response_type parameter is invalid
    ResponseTwo:
      type: object
      properties:
        error:
          type: string
          description: invalid_username
        error_description:
          type: string
          description: The dl_username parameter is invalid     
    ResponseThree:
      type: object
      properties:
        error:
          type: string
          description: invalid_mobile
        error_description:
          type: string
          description: The dl_mobile parameter is invalid    
    ResponseFour:
      type: object
      properties:
        error:
          type: string
          description: multiple_mobile_accounts
        error_description:
          type: string
          description: The mobile number provided is associated with more than
                        one DigiLocker accounts. Please login using username.          
    ResponseFive:
      type: object
      properties:
        error:
          type: string
          description: otp_error
        error_description:
          type: string
          description: OTP could not be sent as the account may not have a
                        valid mobile or a valid email.                              
    ResponseSix:
      type: object
      properties:
        error:
          type: string
          description: unexpected_error
        error_description:
          type: string
          description: Internal server error 
    ResponseSeven:
      type: object
      properties:
        error:
          type: string
          description: partner_service_unresponsive
        error_description:
          type: string
          description: Internal server error         
    Response1:
      type: object
      properties:
        error:
          type: string
          description: repository_service_inactive
        error_description:
          type: string
          description: Internal server error 
    Response2:
      type: object
      properties:
        error:
          type: string
          description: repository_service_unpublished
        error_description:
          type: string
          description: Internal server error      
    Response3:
      type: object
      properties:
        error:
          type: string
          description: repository_service_unresponsive
        error_description:
          type: string
          description: Internal server error            
    Response4:
      type: object
      properties:
        error:
          type: string
          description: repository_service_configerror
        error_description:
          type: string
          description: Internal server error                  
    Response5:
      type: object
      properties:
        error:
          type: string
          description: repository_service_resperror
        error_description:
          type: string
          description: Internal server error                        
    Response6:
      type: object
      properties:
        error:
          type: string
          description: repository_service_exception
        error_description:
          type: string
          description: Internal server error                              
    Response7:
      type: object
      properties:
        error:
          type: string
          description: parameter_missing
        error_description:
          type: string
          description: One or more of the mandatory parameters is missing 
    Response8:
      type: object
      properties:
        error:
          type: string
          description: invalid_ts
        error_description:
          type: string
          description: Timestamp parameter is invalid 
    Response9:
      type: object
      properties:
        error:
          type: string
          description: hmac_mismatch
        error_description:
          type: string
          description: HMAC does not match   
    Response10:
      type: object
      properties:
        error:
          type: string
          description: mobile_exists
        error_description:
          type: string
          description: A DigiLocker account already exists with this mobile
                        number.  
    Response11:
      type: object
      properties:
        error:
          type: string
          description: auth_failure
        error_description:
          type: string
          description: The data on Aadhaar does not match with one or more of
                        Aadhaar, Name, DOB and Gender data provided. Aadhaar
                        demographic authentication failure. 
    Response12:
      type: object
      properties:
        error:
          type: string
          description: invalid_parameter
        error_description:
          type: string
          description: One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-
                           uid parameter is missing or invalid  Name parameter
                          is missing or invalid  Dob parameter is missing or
                          invalid  Gender parameter is missing or invalid 
                          Mobile parameter is missing or invalid  Verification
                          parameter is missing or invalid  Consent parameter is
                          missing or invalid  Timestamp parameter is missing or
                          invalid  HMAC parameter is missing or invalid                     
    Response13:
      type: object
      properties:
        error:
          type: string
          description: repository_service_configerror
        error_description:
          type: string
          description: The issuer service is not available. Please contact
                        DigiLocker support.  
    Response14:
      type: object
      properties:
        error:
          type: string
          description: invalid_orgid
        error_description:
          type: string
          description: The orgid parameter is missing or invalid.
    Response15:
      type: object
      properties:
        error:
          type: string
          description: invalid_doctype
        error_description:
          type: string
          description: The doctype parameter is missing or invalid.
    Response16:
      type: object
      properties:
        error:
          type: string
          description: pull_response_pending
        error_description:
          type: string
          description: The details provided above do not exactly match with the
                        details on the certificate. Your request has been
                        forwarded to the Issuer department. The Issuer
                        department will verify the details provided above. If
                        the verification is successful, your certificate will be
                        made available in the Issued Documents section of your
                        DigiLocker. 
    Response17:
      type: object
      properties:
        error:
          type: string
          description: uri_exists
        error_description:
          type: string
          description: This document already exists in your Issued Documents.      
    Response18:
      type: object
      properties:
        error:
          type: string
          description: aadhaar_not_linked
        error_description:
          type: string
          description: To access issued documents, please link your Aadhaar
                        number to your DigiLocker account.      
  securitySchemes:
    oauthsecurity:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://betaapi.digitallocker.gov.in/public/oauth2/1/token'
          scopes:
            default: default scope
    oauthAuthorizeCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://betaapi.digitallocker.gov.in/public/oauth2/1/authorize'
          tokenUrl: 'https://betaapi.digitallocker.gov.in/public/oauth2/1/token'
          scopes: {}
    bearerAuth:
      type: http
      scheme: bearer
    Customkeys1:
      type: apiKey
      in: header
      name: X1123
    Customkey2:
      type: apiKey
      in: header
      name: X-2
